@startuml

title __MODELS's Class Diagram__\n
    namespace odels {
      class models.Bowler {
          - email : String
          - fullName : String
          - nickName : String
          + Bowler()
          + equals()
          + getEmail()
          + getFullName()
          + getNickName()
      }
    }

    namespace odels {
      class models.ControlDesk {
          - lanes : HashSet
          - numLanes : int
          + ControlDesk()
          + addPartyQueue()
          + assignLane()
          + getControlDeskManager()
          + getLanes()
          + getNumLanes()
          + getPartyQueue()
          + run()
      }
    }

    namespace odels {
      class models.Lane {
          - ball : int
          - bowlIndex : int
          - bowlerIterator : Iterator
          - canThrowAgain : boolean
          - curScores : int[]
          - finalScores : int[][]
          - frameNumber : int
          - gameFinished : boolean
          - gameIsHalted : boolean
          - gameNumber : int
          - partyAssigned : boolean
          - scores : HashMap
          - tenthFrameStrike : boolean
          + Lane()
          + assignParty()
          + getLaneManager()
          + getPinsetter()
          + isGameFinished()
          + isPartyAssigned()
          + pauseGame()
          + receivePinsetterEvent()
          + run()
          + unPauseGame()
          ~ normalStrike()
          ~ printReport()
          ~ tenthframeStrike()
          - finishGame()
          - lanePublish()
          - markScore()
          - resetBowlerIterator()
          - resetScores()
          - sleep()
          - throwBall()
          - waitWhileGameHalted()
      }
    }

    namespace odels {
      class models.Party {
          - myBowlers : Vector
          + Party()
          + getMembers()
          + getSize()
      }
    }

    namespace odels {
      class models.Pinsetter {
          - foul : boolean
          - pins : boolean[]
          - rnd : Random
          - throwNumber : int
          + Pinsetter()
          + ballThrown()
          + getManager()
          + reset()
          + resetPins()
      }
    }

    namespace odels {
      class models.Score {
          - date : String
          - nick : String
          - score : String
          + Score()
          + getDate()
          + getScore()
          + toString()
      }
    }

    namespace odels {
      class models.ScoreBoard {
          - bowlerIndex : int
          - cumulScores : int[][]
          - teamSize : int
          + ScoreBoard()
          + getCumulScores()
          + getFinalScore()
          + getScore()
          + reset()
          + saveToFile()
          + setBowlerIndex()
          - checkIfTrue()
          - checkTwoStrike()
          - normalThrow()
          - twoStrikeBalls()
      }
    }

    namespace odels {
      class models.ScoreReport {
          - content : StringBuilder
          + ScoreReport()
          + sendEmail()
          + sendPrintout()
          + sendln()
          + sendln()
      }
    }

  models.ControlDesk o-- managers.ControlDeskManager : controlDeskManager
  models.ControlDesk o-- utils.Queue : partyQueue
  models.Lane .up.|> observers.PinsetterObserver
  models.Lane o-- models.Bowler : currentThrower
  models.Lane o-- managers.LaneManager : laneManager
  models.Lane o-- models.Party : party
  models.Lane o-- models.ScoreBoard : scoreBoard
  models.Lane o-- models.Pinsetter : setter
  models.Pinsetter o-- managers.PinsetterManager : manager


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
