/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import dbAccess.AdhocQuery;
import models.Query;

import javax.swing.*;
import java.awt.*;
import java.util.Vector;

/**
 *
 * @author sbose
 */
public class AdhocQueryView extends javax.swing.JFrame {
    private javax.swing.JButton availQueryButton;
    private javax.swing.JComboBox<String> availQuerySelector;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton queryCreatorButton;
    private javax.swing.JPanel queryPanel;
    /**
     * Creates new form QueryView
     */

    public AdhocQueryView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        setTitle("Ad-Hoc Queries");
        queryPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        availQuerySelector = new javax.swing.JComboBox<String>(AdhocQuery.fetchQueryNames());
        availQueryButton = new javax.swing.JButton();
        queryCreatorButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Available Queries");

        availQueryButton.setText("Submit Query");
        availQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availQueryButtonActionPerformed(evt);
            }
        });

        queryCreatorButton.setText("Create Query");
        queryCreatorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryCreatorButtonActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Adhoc Queries");

        javax.swing.GroupLayout queryPanelLayout = new javax.swing.GroupLayout(queryPanel);
        queryPanel.setLayout(queryPanelLayout);
        queryPanelLayout.setHorizontalGroup(
            queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanelLayout.createSequentialGroup()
                .addGap(301, 301, 301)
                .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, queryPanelLayout.createSequentialGroup()
                .addContainerGap(219, Short.MAX_VALUE)
                .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, queryPanelLayout.createSequentialGroup()
                        .addComponent(availQuerySelector, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(196, 196, 196))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, queryPanelLayout.createSequentialGroup()
                        .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(queryCreatorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(availQueryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(307, 307, 307))))
        );
        queryPanelLayout.setVerticalGroup(
            queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, queryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(80, 80, 80)
                .addComponent(jLabel2)
                .addGap(42, 42, 42)
                .addComponent(availQuerySelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(availQueryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addComponent(queryCreatorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(queryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(queryPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        queryPanel.getAccessibleContext().setAccessibleName("");

        pack();
        Dimension screenSize = (Toolkit.getDefaultToolkit()).getScreenSize();
        setLocation(
                ((screenSize.width) / 2) - ((getSize().width) / 2),
                ((screenSize.height) / 2) - ((getSize().height) / 2));
        setVisible(true);
    }

    private void availQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String sqlName= (String) availQuerySelector.getSelectedItem();
        Query query=AdhocQuery.fetchQueriesbyFilter(sqlName).firstElement();
        Object[] cols;
        Object[][] data;
        if(query.getType().equals("INPUT"))
        {
            String value=JOptionPane.showInputDialog(this,query.getMessage());
            cols=AdhocQuery.fetchColumnsByScript(query.getSql(),value);
            data=AdhocQuery.executeAdHocScriptbySql(query.getSql(),value);
        }
        else
        {
             cols= AdhocQuery.fetchColumnsBySqlName(sqlName);
             data = AdhocQuery.executeAdHocScriptbyName(sqlName);
        }
        QueryResultView queryResultView = new QueryResultView(cols, data);
    }
    public void reset()
    {
        availQuerySelector.removeAllItems();
        String[] queries=AdhocQuery.fetchQueryNames();
        for(String q:queries)
            availQuerySelector.addItem(q);
    }
    private void queryCreatorButtonActionPerformed(java.awt.event.ActionEvent evt) {
        QueryCreatorView queryWin = new QueryCreatorView(this);
    }

}
